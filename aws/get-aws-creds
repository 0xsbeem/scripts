#!/bin/bash

# This script takes one argument: the six digit MFA code from your AWS authenticator.
# It will then update the ~/.config/bash/aws.env file with the necessary values.
# Finally, it will source the new values, so you should be ready to go in the current shell.

# First, make sure there are no stale credentials that would cause this command to fail.
if command -v resetaws &> /dev/null
then
  resetaws
else
  echo "WARNING: resetaws command not found. AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, or AWS_SESSION_TOKEN environment variables may be stale, preventing this script from running correctly."
fi

if [ -z $AWS_MFA_SERIAL_NUMBER ]; then
  echo "AWS_MFA_SERIAL_NUMBER must be set. Usually, this is set in $XDG_CONFIG_HOME/bash/personal.env, which is sourced by bashrc."
  exit 1
fi

# Get the session information
info=`aws sts get-session-token --serial-number $AWS_MFA_SERIAL_NUMBER --token-code $1`
access_key=`echo $info | jq -r ".Credentials" | jq -r ".AccessKeyId"`
secret_access_key=`echo $info | jq -r ".Credentials" | jq -r ".SecretAccessKey"`
session_token=`echo $info | jq -r ".Credentials" | jq -r ".SessionToken"`
expiration=`echo $info | jq -r ".Credentials" | jq -r ".Expiration"`

file=~/.config/bash/aws-session.env

# Remove any old session
rm -f $file

# Create the new file
echo "export AWS_ACCESS_KEY_ID=$access_key" >> $file
echo "export AWS_SECRET_ACCESS_KEY=$secret_access_key" >> $file
echo "export AWS_SESSION_TOKEN=$session_token" >> $file
echo "echo 'AWS credentials expire at $expiration'" >> $file

# Use the new credentials
source $file
